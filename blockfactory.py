import pytest


def solution(S):
    S = list(S)
    i = 0
    while i < len(S):
        if i + 1 < len(S):
            if S[i] == S[i + 1]:
                del S[i : i + 2]
                if i > 0:
                    i -= 1
                continue
        i += 1
    return "".join(S)


def solution_b(S):
    results = []
    i = 0
    while i < len(S):
        if results and S[i] == results[-1]:
            results.pop()
        elif i == len(S) - 1:
            results.append(S[i])
        elif i + 1 < len(S):
            if S[i] != S[i + 1]:
                results.append(S[i])
            else:
                i += 1
        i += 1

    return "".join(results)


@pytest.mark.parametrize(
    "values,expected",
    [
        ("BABABA", "BABABA"),
        ("ACCAABBC", "AC"),
        ("ABCBBCBA", ""),
        ("", ""),
        ("BCCBACCACA", "CA"),
        (
            "BAABABBBCACBACCCCCCBCBABACAACCBBCBBBBBCAACBBABBABCAAACBBAAABBCBABBCACBBABBACCBCCBAAAABBCAACABCABCBBBCACBACBBBCBBCBCAAAACCBCCABABAAACBACCBBBCABCBABAABACBAAACCAABCCCAACBACAAAAAAACACCBCBCCBBCBCACCBABCBBCBBCBCBCACBCBBBBABCABACACCBACAACCBABCCBBCCABBBAACCABBBBCBABABBABACCBAAACABBCAAACCCBBCAABBBCBCCBACCACBBABAABACBCBACAAABAACAAABBBBBCABAACBCCABCBAACCBAABBBACBBCCCCCCCCABABAAACAABBBABCBBCACAAABBAAAACAACBAABCACCACCBCCBABBABAABBCBCAACCAAABCBBCCCAABBBACACBBCBCCCCACCBBACBACCACCACACBAABBAACBAACCBCABBACACBABBBCABACCBAABACCBACCAAACBCBAAABCAAAACCBACABCABACCCACCABBBABACAAABCABCBBBACCBABBBACCBBCCACCAACAABBCAACCCABACABCACABBABBAABCCCCAABAABBCCBABBBCBCBBABBCBCBBAACBAAACBAAAABBACBACAABCABBBCBCAABACBCCACACACCABACCCACAACCABCABCAACCBCCCBBACBCACBABBCBABBCBABAABBACBACAABCBBAACCAACBCABCABBCAACACBBBAACAACCACBAAAAABCABBCCACABABBBCBBABBBABCCBBACACAACBABCBBBACBCCBBBBCBBACBACBCCBCAACACACCBCBBCBCBCBCBAACBAABBABCCCCBACAABBAACACCCBCABABAABAABAACCCACBCACABACAABBAABCABBBBCCCCACABBCBBCCAACBBCCCCABBCCBBCCBCBCACACBCAABCCCBBCA",
            "ABCACBABCBABACACACBACACABCABCBCACBABABABACBABCABCBCBCACABCBCBCABABCBCBCACBCABCABACABACBABABACACACABCBCBACABCABCABCBABCBACABABACBABACACBCBABCBACACBCACBABCACBCBABCBACABCABACBABACABCABCBABABCABACABCACBABCBCACACBACBACBCABCBCBACBACACBACACABCABCBCACBCACBACBACBABACBCACBABABABCABABACABABCBACBCACBACACACBCBCBCBACBCABABCACBCACABABCACACBCBA",
        ),
        ("AACCACC", "A"),
    ],
)
def tests_solution(values, expected):
    assert solution_b(values) == expected


def __main__():
    import random

    A = "".join(random.choice(["A", "B", "C"]) for _ in range(50000))
    solution(A)
